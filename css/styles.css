:root {
  --base-font-size: 1.2rem;
/* adds pixels to top left and bottom right */
  --corners: 24px 0;
  --corners-sm: 10px 0;
/* my monochrome colours and custom fonts    */
  --light-gray: #f2f2f2;
  --silver: #d9d9d9;
  --med-gray: #a6a6a6;
  --dk-gray: #404040;
  --dkst-gray: #0D0D0D;
/* my custom fonts  */
  --mono: "Poller One", sans-serif;
  --sans: "Chivo", sans-serif; 
  --ld-background: light-dark(var(--silver), var(--dkst-gray));
  --ld-text: light-dark(var(--dk-gray), var(--silver));
  --ld-heading: light-dark(var(--dkst-gray), var(--light-gray));
  --ld-link: light-dark(var(--dk-gray), var(--light-gray));
  --ld-link-hover: light-dark(var(--dkst-gray), var(--silver));
  --ld-project-background: light-dark(var(--light-gray), var(--silver));
}

/* border box model: https://css-tricks.com/box-sizing/ - allows layout creation to be easier */
html {
    box-sizing: border-box;
    color-scheme:light dark;
}
/* cool css technique - use has selector to check if the html has an id of mode-switcher and if the input for an id is checked to determine the color scheme */
html:has(#mode-switcher #light-mode:checked){
  color-scheme:light;
}
html:has(#mode-switcher #dark-mode:checked){
  color-scheme:dark;
}
/* double colon = pseudo element (style to add before an element or after the element, the below psuedo elements say everything before and after also inherits the box-szing (not inherited by default))  */
*,
*::before,
*::after {
    box-sizing: inherit;
}
/* generic styles for the page */
body {
    padding: 0;
    margin: 0;
    font-family: var(--sans);
    background-color: var(--ld-background);
    color: var(--ld-text);
    font-size: var(--base-font-size);
}
h1,
h2,
h3 {
    margin: 0;
    font-family: var(--mono);
}
/* using calc helps us to scale proportionately to screens and browser settings*/
h1 {
  font-size: calc(var(--base-font-size) * 2.5);
}

h2 {
  font-size: calc(var(--base-font-size) * 2.2);
  letter-spacing: 0.05em;
}

h3 {
  letter-spacing: 0.05em;
  text-transform: uppercase;
}

p{
  font-size:var(--base-font-size);
  line-height: 1.5; /* no unit of measure needed, proportioneate by default */
  font-family: var(--sans);
}

/* default link styles overrriden by classes  */
a {
  color: var(--ld-link);
}
a:hover {
  color: var(--ld-link-hover);
}

.page-container {
  max-width:900px;
  margin:auto;
  padding: 2rem;
}
/* intro section styling and layout */

.main-article{
  display: grid;
  grid-template-columns: 1fr;
  gap: 2rem;
  text-align: center;
}

.main-article img{
  margin: auto;
/* some classes to crop the image by default on mobile */
  object-fit: cover;
  object-position: top;
  height: 175px;
  width: 300px;
  overflow: hidden;
}

/* intro styles */
#intro {
    padding: 5rem 0;
}

#intro .name span {
    font-family: var(--mono);
    font-size: calc(var(--base-font-size) * 2);
    color: var(--ld-heading);
    display: block; /* puts the span on its own line */
    font-weight: 600;
}

.text-link-dark {
    color: var(--light-gray);
    background-color:  var(--dk-gray);
    padding: 0 2px;
}

.text-link-dark:hover {
    color: var(--silver);
    text-decoration: none;
}

/* make sure images don't exceed the width of the window  but allows scaling*/
img {
  max-width: 100%;
  border-radius: var(--corners);
}

/* svg styling */
.icons {
  list-style-type: none;
  margin: 0;
  padding: 0;
  display: flex;
  flex-flow: row wrap;
/*   align-items: flex-end; */
  justify-content: center;
  gap: 2rem;
}
ul svg {
  width: 36px;
  height: 36px;
}
.social {
  fill: var(--ld-link);
}
.social:hover {
  fill: var(--ld-link-hover);
}

#contact {
  background-color: var(--dkst-gray);
  color: var(--light-gray);
  text-align: center;
  padding: 2rem;
}

#contact a {
  background-color: var(--light-gray);
  padding: 0 2px;
  color: var(--dk-gray)
}

#contact a:hover {
    color: var(--dkst-gray);
    text-decoration: none;
}

footer{
  text-align: center;
  padding: 5rem 0;
}

.h2-footer{
    margin:2rem 0;
}

.footer-text {
  line-height: 1.5; /* gives spaing between lines with default margins removed from the ul */
  display: grid;
  grid-template-columns: 1fr;
  gap: 2rem;
}

.footer-textbox ul{
  list-style:none;
  padding:0;
  margin: 0;
  font-size: calc(var(--base-font-size) * 0.85)
}

/* projects section */
/* main is the root of this section so we can set the default layout starting with mobile first */
main {
  margin-top:5rem;
  margin-bottom:5rem;
  text-align:center;
}

.projects {
  display: flex;
  flex-flow: column nowrap; /* shorthand property that combines flex-direction and flex-wrap to control the main axis and wrapping behavior of flex items within a flex container - this sets the children to always be in a column and never wrap into a row */
  gap:3rem;
}

.h2-projects{
  margin:2rem 0;
}

.project-card{
  background-color: var(--ld-project-background);
  border-radius: var(--corners);
  padding:3rem;
  display: grid;
  grid-template-columns: 1fr;
  gap:3rem;
  color:var(--dkst-gray);
}

.project-card ul{
  list-style:none;
  padding: 0;
  margin:0;
  display:flex;
  flex-flow: row wrap; /* flex direction wrap, and flex wrap*/
  justify-content:center;
  gap:1rem;
}

.project-card li {
  background-color: var(--dk-gray);
  color: var(--light-gray);
  border-radius: var(--corners-sm);
  padding:0.5rem;
  font-size: calc(var(--base-font-size) * 0.85); /*make the font size a touch smaller then base*/
}

.project-card img{
  grid-row: 1/2; /* moves the image into the first row out of the two rows in the project card*/
  border:  2px 4px 8px var(--dk-gray);
}

/* light dark button styles section
 - see Radio Toggle switch codepen for accessible toggle switch that this is based on:
 https://codepen.io/scottohara/pen/zLZwNv
*/
fieldset{
  border:none;
  padding:0;
  white-space: nowrap;
  position: absolute;
  top: 1rem;
  right: 1rem;
  z-index: 1000;
}
/* visually removes the legend text but still allows it to be read by screen readers */
legend{
  font-size: calc(var(--base-font-size)* 0.10) ;
  opacity: 0;
  position: absolute;
}

#mode-switcher label{
  display: inline-block;
  line-height: 2;
  position: relative;
  z-index: 2;
  font-size: calc(var(--base-font-size)* 0.75) 
}
/* hide the default input visually */
#mode-switcher input {
	opacity: 0; /*more accessible then a visually hidden class apparently*/
	position: absolute;
}

#mode-switcher label:first-of-type {
	padding-right: 5em;
}

#mode-switcher label:last-child {
	margin-left: -4.25em;
	padding-left: 5em;
}

#mode-switcher:focus-within label:first-of-type:after {
	box-shadow: 0 0 0 2px #fff, 0 0 0 4px var(--ld-text);
}

/* polyfill class*/
#mode-switcher.focus-within label:first-of-type:after {
	box-shadow: 0 0 0 2px #fff, 0 0 0 4px var(--ld-text);
}

/* making the switch UI.  */
#mode-switcher label:first-of-type:before,
#mode-switcher label:first-of-type:after {
	border: 1px solid #aaa;
	content: "";
	height: 2em;
	overflow: hidden;
	pointer-events: none;
	position: absolute;
	vertical-align: middle;
}
/* the 'button' part of the toggle */
#mode-switcher label:first-of-type:before {
	background: #fff;
	border: 1px solid #aaa;
	border-radius: 100%;
	position: absolute;
	right: -.075em;
	transform: translateX(0em);
	transition: transform .2s ease-in-out;
	width: 2em;
	z-index: 2;
}
/* creates the toggle UI background */
#mode-switcher label:first-of-type:after {
	background: var(--ld-text);
	border-radius: 1em;
	margin: 0 1em;
	transition: background .2s ease-in-out;
	width: 4em;
}

/*
	Visually change the switch UI to match the
	checked state of the first radio button
*/
#mode-switcher input:first-of-type:checked ~ label:first-of-type:after {
	background: var(--ld-text);
}

#mode-switcher input:first-of-type:checked ~ label:first-of-type:before {
	transform: translateX(-2em);
}

/* Move the 2nd label to have a lower z-index, so when that
   option is toggled, the first label will overlay on top of the
   Switch ui, and the switch can be pressed again to toggle back
   to the prevoius state. */
   #mode-switcher input:last-of-type:checked ~ label:last-of-type {
    z-index: 1;
  }

@media(min-width: 750px){
  :root{
    --base-font-size : 1.3rem;
  }
  
  .wrapper{
    padding: 5rem;
  }
  
  .main-article{
    grid-template-columns: 1fr 1fr;
    align-items: center;
    text-align:left;
  }
  
  .main-article img {
    max-height: 400px;
    margin: 0 0 0 auto;
    object-fit: none;
    object-position: none;
    width: auto;
    height: auto;
    overflow: auto;
  }
  
  .icons {
    justify-content: start;
  }
  
  footer {
    text-align:left;
  }
  
  .footer-text{
    grid-template-columns: 1fr 1fr;
    align-items: start;
  }
  
}

@media (min-width:850px)
{
  
  main{
    text-align:left;
  }
  
  .h2-projects{
    margin:2rem 0;
    text-align:left;
  }
  
  .project-card{
    grid-template-columns: 1fr 1fr;
    gap: 2rem;
  }
  
  .project-card img{
      grid-row:auto; /*follows the natural html order*/
  }
  .project-card ul{
    justify-content:flex-start;
  }
}
